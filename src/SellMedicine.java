import common.OpenPdf;
import dao.ConnectionProvider;
import java.sql.Connection;
import java.sql.*;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import java.util.Calendar;
import java.util.Date;
import dao.PharmacyUtils;
import java.io.FileOutputStream;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPTable;  
import com.itextpdf.text.pdf.PdfWriter;



/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author ASUS
 */
public class SellMedicine extends javax.swing.JFrame {
    
    public String numberPattern = "^[0-9]*$";
    private int finalTotalPrice = 0;
    private String billId = "";
    private String username = "";

    /**
     * Creates new form SellMedicine
     */
    public SellMedicine() {
        initComponents();
    }
    
     public SellMedicine(String tempUsername) {
        initComponents();
        username = tempUsername;
        setLocationRelativeTo(null);
    }
     
     private void medicineName(String nameOrUniqueId){
    DefaultTableModel model = (DefaultTableModel) medicinesTable.getModel();
    model.setRowCount(0);
    try{
    Connection con = ConnectionProvider.getCon();
    Statement st = con.createStatement();
    ResultSet rs = st.executeQuery("select *from medicine where name like '"+nameOrUniqueId+"%' or UniqueId like '"+nameOrUniqueId+"%'");
    while(rs.next()){
    model.addRow(new Object[]{rs.getString("uniqueId")+"- "+rs.getString("name")});
    }
    
    }
    catch(Exception e){
    JOptionPane.showMessageDialog(null,e);
    
    }
    
    }

      private void clearMedicineFields(){
        txtUniqueId.setText("");
        txtName.setText("");
        txtCompanyName.setText("");
        txtPricePerUnit.setText("");
        txtNoOfUnits.setText("");
        txtTotalPrice.setText("");
    }
    
        public String getUniqueId(String prefix){
    return prefix + System.nanoTime();
    }
      
      
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        medicinesTable = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        txtUniqueId = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtCompanyName = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtPricePerUnit = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtNoOfUnits = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtTotalPrice = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        cartTable = new javax.swing.JTable();
        btnAddToCart = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        lblFinalTotalPrice = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1300, 700));
        setUndecorated(true);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 153));
        jLabel1.setText("Sell Medicine");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(533, 14, 310, -1));
        getContentPane().add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 74, 1300, -1));

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/close.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(1250, 10, 40, 40));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 153, 51));
        jLabel2.setText("Search");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 90, 64, -1));

        txtSearch.setBackground(new java.awt.Color(204, 255, 255));
        txtSearch.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        txtSearch.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });
        getContentPane().add(txtSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 360, 30));

        medicinesTable.setBackground(new java.awt.Color(204, 255, 153));
        medicinesTable.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        medicinesTable.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        medicinesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Medicines"
            }
        ));
        medicinesTable.setGridColor(new java.awt.Color(0, 0, 0));
        medicinesTable.setSelectionBackground(new java.awt.Color(0, 0, 0));
        medicinesTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                medicinesTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(medicinesTable);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 213, 340, 420));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 153, 51));
        jLabel3.setText("Medicine ID");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 90, -1, -1));

        txtUniqueId.setBackground(new java.awt.Color(204, 255, 255));
        txtUniqueId.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        txtUniqueId.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        getContentPane().add(txtUniqueId, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 120, 350, 30));

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 153, 51));
        jLabel4.setText("Name");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 180, -1, -1));

        txtName.setBackground(new java.awt.Color(204, 255, 255));
        txtName.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        txtName.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        getContentPane().add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 210, 350, 30));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 153, 51));
        jLabel5.setText("Company Name");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 270, -1, -1));

        txtCompanyName.setBackground(new java.awt.Color(204, 255, 255));
        txtCompanyName.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        txtCompanyName.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        getContentPane().add(txtCompanyName, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 300, 350, 30));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 153, 51));
        jLabel6.setText("Price Per Unit  (Rs.)");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 90, -1, -1));

        txtPricePerUnit.setBackground(new java.awt.Color(204, 255, 255));
        txtPricePerUnit.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        txtPricePerUnit.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        getContentPane().add(txtPricePerUnit, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 120, 340, 30));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 153, 51));
        jLabel7.setText("No. Of Units");
        getContentPane().add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(1035, 180, 140, -1));

        txtNoOfUnits.setBackground(new java.awt.Color(204, 255, 255));
        txtNoOfUnits.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        txtNoOfUnits.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        txtNoOfUnits.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNoOfUnitsKeyReleased(evt);
            }
        });
        getContentPane().add(txtNoOfUnits, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 210, 340, 30));

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 153, 51));
        jLabel8.setText("Total Price  (Rs.)");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(1030, 270, 160, -1));

        txtTotalPrice.setBackground(new java.awt.Color(204, 255, 255));
        txtTotalPrice.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        txtTotalPrice.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        getContentPane().add(txtTotalPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 300, 340, 30));

        cartTable.setBackground(new java.awt.Color(204, 255, 153));
        cartTable.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        cartTable.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        cartTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Medicine ID", "Name", "Company Name", "Price Per Unit", "No Of Units", "Total Price"
            }
        ));
        cartTable.setGridColor(new java.awt.Color(0, 0, 0));
        cartTable.setSelectionBackground(new java.awt.Color(0, 0, 0));
        cartTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cartTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(cartTable);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 430, 880, 200));

        btnAddToCart.setBackground(new java.awt.Color(204, 255, 204));
        btnAddToCart.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnAddToCart.setForeground(new java.awt.Color(204, 0, 0));
        btnAddToCart.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/add to cart.png"))); // NOI18N
        btnAddToCart.setText("Add To Cart");
        btnAddToCart.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        btnAddToCart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddToCartActionPerformed(evt);
            }
        });
        getContentPane().add(btnAddToCart, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 350, 120, 50));

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel9.setText("RS:");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 650, -1, -1));

        lblFinalTotalPrice.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblFinalTotalPrice.setText("00");
        getContentPane().add(lblFinalTotalPrice, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 650, 60, -1));

        jButton3.setBackground(new java.awt.Color(204, 255, 204));
        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton3.setForeground(new java.awt.Color(204, 0, 0));
        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/generate bill & print.png"))); // NOI18N
        jButton3.setText("Purchase & Print");
        jButton3.setBorder(javax.swing.BorderFactory.createCompoundBorder());
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(920, 640, 150, 50));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
         medicineName("");
        txtUniqueId.setEditable(false);
        txtName.setEditable(false);
        txtCompanyName.setEditable(false);
        txtPricePerUnit.setEditable(false);
        txtTotalPrice.setEditable(false);
                                     
    }//GEN-LAST:event_formComponentShown

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        // TODO add your handling code here:
        String search = txtSearch.getText();
        medicineName(search);
        
    }//GEN-LAST:event_txtSearchKeyReleased

    private void medicinesTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_medicinesTableMouseClicked
        // TODO add your handling code here:
        int index = medicinesTable.getSelectedRow();
        TableModel model = medicinesTable.getModel();
        String nameOrUniqueId = model.getValueAt(index,0).toString();
        
        String uniqueId[] = nameOrUniqueId.split("-",0);
        try{
        Connection con = ConnectionProvider.getCon();
        Statement st = con.createStatement();
        ResultSet rs = st.executeQuery("select *from medicine where uniqueId="+uniqueId[0]+"");
        while(rs.next()){
        txtUniqueId.setText(uniqueId[0]);
        txtName.setText(rs.getString("name"));
        txtCompanyName.setText(rs.getString("companyName"));
        txtPricePerUnit.setText(rs.getString("price"));
        txtNoOfUnits.setText("");
        txtTotalPrice.setText("");
        }
        }
        catch(Exception e){
        JOptionPane.showMessageDialog(null,e);
        
        }                                           
    }//GEN-LAST:event_medicinesTableMouseClicked

    private void txtNoOfUnitsKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNoOfUnitsKeyReleased
        // TODO add your handling code here:
        String noOfUnits = txtNoOfUnits.getText();
        if(!noOfUnits.equals("")){
            String price = txtPricePerUnit.getText();
            if(!noOfUnits.matches(numberPattern)){
            JOptionPane.showMessageDialog(null,"Number of Units field is invalid.");
            
            }
            int totalPrice = Integer.parseInt(noOfUnits) * Integer.parseInt(price);
            txtTotalPrice.setText(String.valueOf(totalPrice));
        }
        else{
        txtTotalPrice.setText("");
        }
                                           
    }//GEN-LAST:event_txtNoOfUnitsKeyReleased

    private void btnAddToCartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddToCartActionPerformed
        // TODO add your handling code here:
        String noOfUnits = txtNoOfUnits.getText();
        String uniqueId = txtUniqueId.getText();
        
        if(!noOfUnits.equals("") &&  !uniqueId.equals("")){
        String name = txtName.getText();
        String companyName = txtCompanyName.getText();
        String pricePerUnit = txtPricePerUnit.getText();
        String totalPrice = txtTotalPrice.getText();
        int checkStock = 0;
        int checkMedicineAlreadyExistInCart = 0;
        
        try{
        Connection con = ConnectionProvider.getCon();
        Statement st = con.createStatement();
        ResultSet rs = st.executeQuery("select *from medicine where uniqueId="+uniqueId+"");
        while (rs.next()){
        if(rs.getInt("quantity") >= Integer.parseInt(noOfUnits)){
        checkStock = 1;
        
        }else{
        JOptionPane.showMessageDialog(null,"Medicine is out of stock. Only "+rs.getInt("quantity")+"Left");
        }
        }
        }
        catch(Exception e){
        JOptionPane.showMessageDialog(null,e);
        
        }
        
        if(checkStock ==1){
        DefaultTableModel dtm = (DefaultTableModel) cartTable.getModel();
        if(cartTable.getRowCount() != 0){
        
        for(int i=0;i <cartTable.getRowCount();i++){
            if(Integer.parseInt(dtm.getValueAt(i,0).toString()) ==Integer.parseInt(uniqueId)){
            checkMedicineAlreadyExistInCart = 1;
            JOptionPane.showMessageDialog(null,"Medicine already exist in cart");
            }
        }  
        }
        
        if(checkMedicineAlreadyExistInCart == 0) {
        dtm.addRow(new Object[]{uniqueId,name,companyName,pricePerUnit,noOfUnits,totalPrice});
        finalTotalPrice = finalTotalPrice + Integer.parseInt(totalPrice);
        lblFinalTotalPrice.setText(String.valueOf(finalTotalPrice));
        JOptionPane.showMessageDialog(null,"Added Successfully");
        }
        clearMedicineFields();
        
        }
        
        }else{
        JOptionPane.showMessageDialog(null,"No Of Units and Medicine ID field is required.");
        }
                                              

    }//GEN-LAST:event_btnAddToCartActionPerformed

    private void cartTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cartTableMouseClicked
        // TODO add your handling code here:
        int index = cartTable.getSelectedRow();
        int a = JOptionPane.showConfirmDialog(null,"Do you want to remove this Medicine", "Select",JOptionPane.YES_NO_OPTION);
        if (a==0){
        TableModel model = cartTable.getModel();
        String total = model.getValueAt(index,5).toString();
        finalTotalPrice = finalTotalPrice - Integer.parseInt(total);
        lblFinalTotalPrice.setText(String.valueOf(finalTotalPrice));
        ((DefaultTableModel) cartTable.getModel()).removeRow(index);
        }
                                         

    }//GEN-LAST:event_cartTableMouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
         if(finalTotalPrice !=0){
            billId = getUniqueId("Bill-");
            
            DefaultTableModel dtm = (DefaultTableModel)cartTable.getModel();
            if(cartTable.getRowCount()!=0){
                for(int i =0;i<cartTable.getRowCount();i++){
                try{
                Connection con = ConnectionProvider.getCon();
                Statement st = con.createStatement();
                st.executeUpdate("update medicine set quantity=quantity-"+Integer.parseInt(dtm.getValueAt(i,4).toString())+" where uniqueId="+Integer.parseInt(dtm.getValueAt(i,0).toString()));
                }
                catch(Exception e){
                JOptionPane.showMessageDialog(null,e);
                }
            }
            }
            
            try{
            SimpleDateFormat myFormat = new SimpleDateFormat("dd-MM-yyyy");
            Calendar cal = Calendar.getInstance();
            Connection con = ConnectionProvider.getCon();
            PreparedStatement ps = con.prepareStatement("insert into bill(billId,billDate,totalPaid,generatedBy) values(?,?,?,?)");
            ps.setString(1, billId);
            ps.setString(2, myFormat.format(cal.getTime()));
            ps.setInt(3, finalTotalPrice);
            ps.setString(4, username);
            ps.executeUpdate();
            
            
            }
            catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
            }
            
            //Create Bill
            
            com.itextpdf.text.Document doc = new com.itextpdf.text.Document();
            try{
            PdfWriter.getInstance(doc, new FileOutputStream(PharmacyUtils.billpath+""+billId+".pdf"));
            doc.open();
            Paragraph pharmacyName = new Paragraph("                             LifeLine Pharmacy Management System\n");
            doc.add(pharmacyName);
            Paragraph starLine = new Paragraph("***********************************************************************************************");
            doc.add(starLine);
            Paragraph details = new Paragraph("\tBill ID: "+billId+"\nDate: "+ new Date()+"\nTotal Paid:"+finalTotalPrice);
            doc.add(details);
            doc.add(starLine);
            PdfPTable tbl = new PdfPTable(6);
            tbl.addCell("Medicine ID");
            tbl.addCell("Name");
            tbl.addCell("Company Name");
            tbl.addCell("Price Per Unit");
            tbl.addCell("No Of Units");
            tbl.addCell("Sub Total Price");
            
            for(int i=0;i<cartTable.getRowCount();i++){
            String a = cartTable.getValueAt(i,0).toString();
            String b = cartTable.getValueAt(i,1).toString();
            String c = cartTable.getValueAt(i,2).toString();
            String d = cartTable.getValueAt(i,3).toString();
            String e = cartTable.getValueAt(i,4).toString();
            String f = cartTable.getValueAt(i,5).toString();
            tbl.addCell(a);
             tbl.addCell(b);
              tbl.addCell(c);
               tbl.addCell(d);
                tbl.addCell(e);
                 tbl.addCell(f);
            
            }
                 doc.add(tbl);
                 doc.add(starLine);
                 Paragraph thanksMsg = new Paragraph("Thank you!!! , Please Visit Again...");
                 doc.add(thanksMsg);
                 OpenPdf.openById(String.valueOf(billId));
            }
            catch(Exception e){
            JOptionPane.showMessageDialog(null,e);
            }
            
            doc.close();
            setVisible(false);
            new SellMedicine(username).setVisible(true);
            
        }
        else{
        JOptionPane.showMessageDialog(null,"Please add some medicine to cart.");
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SellMedicine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SellMedicine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SellMedicine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SellMedicine.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SellMedicine().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddToCart;
    private javax.swing.JTable cartTable;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblFinalTotalPrice;
    private javax.swing.JTable medicinesTable;
    private javax.swing.JTextField txtCompanyName;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtNoOfUnits;
    private javax.swing.JTextField txtPricePerUnit;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtTotalPrice;
    private javax.swing.JTextField txtUniqueId;
    // End of variables declaration//GEN-END:variables
}
